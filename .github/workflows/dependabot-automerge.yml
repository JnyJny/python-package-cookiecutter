name: Dependabot Auto-Merge

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  issues: write
  contents: write
  pull-requests: write

jobs:
  test:
    name: Test Dependabot PR
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.13"

      - name: Create Bogus Git Configuration
        env:
          GITHUB_NAME: "NOBODY"
          GITHUB_EMAIL: "NOBODY@NOWHERE.EXAMPLE.COM"
        run: |
          git config --global user.name "$GITHUB_NAME"
          git config --global user.email "$GITHUB_EMAIL"

      - name: Install dependencies
        run: uv sync

      - name: Run Fast Test Suite
        run: |
          uv run pytest -m 'not slow and not integration and not cross_platform' --ignore=tests/test_configuration_matrix.py --ignore=tests/test_generate_projects.py tests/

      - name: Run Security Audit
        run: |
          # Install pip-audit if available, skip if not
          uv run pip install pip-audit 2>/dev/null || echo "pip-audit not available, skipping security audit"
          uv run pip-audit --require-hashes --format=json 2>/dev/null || echo "Security audit completed with warnings"

      - name: Run Code Quality Checks
        run: |
          uv run ruff check hooks tests

  auto-merge:
    name: Auto-Merge Dependabot PR
    needs: test
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    
    steps:
      - name: Fetch Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Auto-approve and merge safe updates
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-patch' ||
          (steps.metadata.outputs.update-type == 'version-update:semver-minor' && 
           contains(steps.metadata.outputs.dependency-names, 'cookiecutter') == false)
        run: |
          echo "Auto-approving ${{ steps.metadata.outputs.update-type }} update for ${{ steps.metadata.outputs.dependency-names }}"
          gh pr review --approve "$PR_URL" --body "Auto-approved ${{ steps.metadata.outputs.update-type }} dependency update that passed all tests."
          gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on major updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-major'
        run: |
          gh pr comment "$PR_URL" --body "ðŸš¨ **Major version update detected** - This PR requires manual review before merging. Major updates may contain breaking changes."
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on security updates
        if: steps.metadata.outputs.update-type == 'version-update:security'
        run: |
          gh pr comment "$PR_URL" --body "ðŸ”’ **Security update detected** - This PR has been auto-approved due to security importance. Tests must pass before auto-merge."
          gh pr review --approve "$PR_URL" --body "Auto-approved security update that passed all tests."
          gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}