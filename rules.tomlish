  # airflow-variable-name-task-id-mismatch (AIR001)
  "(AIR001)",
  # airflow-dag-no-schedule-argument (AIR002)
  "(AIR002)",
  # Using the implicit default schedule.
  "the",
  # airflow3-removal (AIR301)
  "(AIR301)",
  # airflow3-moved-to-provider (AIR302)
  "(AIR302)",
  # airflow3-suggested-update (AIR311)
  "(AIR311)",
  # airflow3-suggested-to-move-to-provider (AIR312)
  "(AIR312)",
  # commented-out-code (ERA001)
  "(ERA001)",
  # print("Hello, world!")
  "world!")",
  # fast-api-redundant-response-model (FAST001)
  "(FAST001)",
  # fast-api-non-annotated-dependency (FAST002)
  "(FAST002)",
  # fast-api-unused-path-parameter (FAST003)
  "(FAST003)",
  # sys-version-slice3 (YTT101)
  "(YTT101)",
  # sys-version2 (YTT102)
  "(YTT102)",
  # sys-version-cmp-str3 (YTT103)
  "(YTT103)",
  # sys-version-info0-eq3 (YTT201)
  "(YTT201)",
  # six-py3 (YTT202)
  "(YTT202)",
  # sys-version-info1-cmp-int (YTT203)
  "(YTT203)",
  # sys-version-info-minor-cmp-int (YTT204)
  "(YTT204)",
  # sys-version0 (YTT301)
  "(YTT301)",
  # sys-version-cmp-str10 (YTT302)
  "(YTT302)",
  # sys-version-slice1 (YTT303)
  "(YTT303)",
  # missing-type-function-argument (ANN001)
  "(ANN001)",
  # missing-type-args (ANN002)
  "(ANN002)",
  # missing-type-kwargs (ANN003)
  "(ANN003)",
  # missing-type-self (ANN101)
  "(ANN101)",
  # missing-type-cls (ANN102)
  "(ANN102)",
  # missing-return-type-undocumented-public-function (ANN201)
  "(ANN201)",
  # missing-return-type-private-function (ANN202)
  "(ANN202)",
  # missing-return-type-special-method (ANN204)
  "(ANN204)",
  # missing-return-type-static-method (ANN205)
  "(ANN205)",
  # missing-return-type-class-method (ANN206)
  "(ANN206)",
  # any-type (ANN401)
  "(ANN401)",
  # cancel-scope-no-checkpoint (ASYNC100)
  "(ASYNC100)",
  # trio-sync-call (ASYNC105)
  "(ASYNC105)",
  # async-function-with-timeout (ASYNC109)
  "(ASYNC109)",
  # async-busy-wait (ASYNC110)
  "(ASYNC110)",
  # async-zero-sleep (ASYNC115)
  "(ASYNC115)",
  # long-sleep-not-forever (ASYNC116)
  "(ASYNC116)",
  # blocking-http-call-in-async-function (ASYNC210)
  "(ASYNC210)",
  # create-subprocess-in-async-function (ASYNC220)
  "(ASYNC220)",
  # run-process-in-async-function (ASYNC221)
  "(ASYNC221)",
  # wait-for-process-in-async-function (ASYNC222)
  "(ASYNC222)",
  # blocking-open-call-in-async-function (ASYNC230)
  "(ASYNC230)",
  # blocking-sleep-in-async-function (ASYNC251)
  "(ASYNC251)",
  # assert (S101)
  "(S101)",
  # or even better:
  "even",
  # exec-builtin (S102)
  "(S102)",
  # bad-file-permissions (S103)
  "(S103)",
  # hardcoded-bind-all-interfaces (S104)
  "(S104)",
  # hardcoded-password-string (S105)
  "(S105)",
  # hardcoded-password-func-arg (S106)
  "(S106)",
  # hardcoded-password-default (S107)
  "(S107)",
  # hardcoded-temp-file (S108)
  "(S108)",
  # try-except-pass (S110)
  "(S110)",
  # try-except-continue (S112)
  "(S112)",
  # request-without-timeout (S113)
  "(S113)",
  # flask-debug-true (S201)
  "(S201)",
  # tarfile-unsafe-members (S202)
  "(S202)",
  # suspicious-pickle-usage (S301)
  "(S301)",
  # suspicious-marshal-usage (S302)
  "(S302)",
  # suspicious-insecure-hash-usage (S303)
  "(S303)",
  # suspicious-insecure-cipher-usage (S304)
  "(S304)",
  # suspicious-insecure-cipher-mode-usage (S305)
  "(S305)",
  # suspicious-mktemp-usage (S306)
  "(S306)",
  # suspicious-eval-usage (S307)
  "(S307)",
  # suspicious-mark-safe-usage (S308)
  "(S308)",
  # suspicious-url-open-usage (S310)
  "(S310)",
  # suspicious-non-cryptographic-random-usage (S311)
  "(S311)",
  # suspicious-telnet-usage (S312)
  "(S312)",
  # suspicious-xmlc-element-tree-usage (S313)
  "(S313)",
  # suspicious-xml-element-tree-usage (S314)
  "(S314)",
  # suspicious-xml-expat-reader-usage (S315)
  "(S315)",
  # suspicious-xml-expat-builder-usage (S316)
  "(S316)",
  # suspicious-xml-sax-usage (S317)
  "(S317)",
  # suspicious-xml-mini-dom-usage (S318)
  "(S318)",
  # suspicious-xml-pull-dom-usage (S319)
  "(S319)",
  # suspicious-xmle-tree-usage (S320)
  "(S320)",
  # suspicious-ftp-lib-usage (S321)
  "(S321)",
  # suspicious-unverified-context-usage (S323)
  "(S323)",
  # hashlib-insecure-hash-function (S324)
  "(S324)",
  # suspicious-telnetlib-import (S401)
  "(S401)",
  # suspicious-ftplib-import (S402)
  "(S402)",
  # suspicious-pickle-import (S403)
  "(S403)",
  # suspicious-subprocess-import (S404)
  "(S404)",
  # suspicious-xml-etree-import (S405)
  "(S405)",
  # suspicious-xml-sax-import (S406)
  "(S406)",
  # suspicious-xml-expat-import (S407)
  "(S407)",
  # suspicious-xml-minidom-import (S408)
  "(S408)",
  # suspicious-xml-pulldom-import (S409)
  "(S409)",
  # suspicious-lxml-import (S410)
  "(S410)",
  # suspicious-xmlrpc-import (S411)
  "(S411)",
  # suspicious-httpoxy-import (S412)
  "(S412)",
  # suspicious-pycrypto-import (S413)
  "(S413)",
  # suspicious-pyghmi-import (S415)
  "(S415)",
  # request-with-no-cert-validation (S501)
  "(S501)",
  # ssl-insecure-version (S502)
  "(S502)",
  # ssl-with-bad-defaults (S503)
  "(S503)",
  # ssl-with-no-version (S504)
  "(S504)",
  # weak-cryptographic-key (S505)
  "(S505)",
  # unsafe-yaml-load (S506)
  "(S506)",
  # ssh-no-host-key-verification (S507)
  "(S507)",
  # snmp-insecure-version (S508)
  "(S508)",
  # snmp-weak-cryptography (S509)
  "(S509)",
  # paramiko-call (S601)
  "(S601)",
  # subprocess-popen-with-shell-equals-true (S602)
  "(S602)",
  # subprocess-without-shell-equals-true (S603)
  "(S603)",
  # call-with-shell-equals-true (S604)
  "(S604)",
  # start-process-with-a-shell (S605)
  "(S605)",
  # Safe usage (literal string)
  "usage",
  # Potentially unsafe usage (expression)
  "unsafe",
  # start-process-with-no-shell (S606)
  "(S606)",
  # start-process-with-partial-path (S607)
  "(S607)",
  # hardcoded-sql-expression (S608)
  "(S608)",
  # unix-command-wildcard-injection (S609)
  "(S609)",
  # django-extra (S610)
  "(S610)",
  # String interpolation creates a security loophole that could be used
  "interpolation",
  # for SQL injection:
  "SQL",
  # SQL injection is impossible if all arguments are literal expressions:
  "injection",
  # django-raw-sql (S611)
  "(S611)",
  # logging-config-insecure-listen (S612)
  "(S612)",
  # jinja2-autoescape-false (S701)
  "(S701)",
  # mako-templates (S702)
  "(S702)",
  # unsafe-markup-use (S704)
  "(S704)",
  # blind-except (BLE001)
  "(BLE001)",
  # boolean-type-hint-positional-argument (FBT001)
  "(FBT001)",
  # boolean-default-value-positional-argument (FBT002)
  "(FBT002)",
  # boolean-positional-value-in-call (FBT003)
  "(FBT003)",
  # unary-prefix-increment-decrement (B002)
  "(B002)",
  # assignment-to-os-environ (B003)
  "(B003)",
  # unreliable-callable-check (B004)
  "(B004)",
  # strip-with-multi-characters (B005)
  "(B005)",
  # mutable-argument-default (B006)
  "(B006)",
  # unused-loop-control-variable (B007)
  "(B007)",
  # function-call-in-default-argument (B008)
  "(B008)",
  # get-attr-with-constant (B009)
  "(B009)",
  # set-attr-with-constant (B010)
  "(B010)",
  # assert-false (B011)
  "(B011)",
  # jump-statement-in-finally (B012)
  "(B012)",
  # redundant-tuple-in-exception-handler (B013)
  "(B013)",
  # duplicate-handler-exception (B014)
  "(B014)",
  # useless-comparison (B015)
  "(B015)",
  # raise-literal (B016)
  "(B016)",
  # assert-raises-exception (B017)
  "(B017)",
  # useless-expression (B018)
  "(B018)",
  # cached-instance-method (B019)
  "(B019)",
  # loop-variable-overrides-iterator (B020)
  "(B020)",
  # f-string-docstring (B021)
  "(B021)",
  # useless-contextlib-suppress (B022)
  "(B022)",
  # function-uses-loop-variable (B023)
  "(B023)",
  # abstract-base-class-without-abstract-method (B024)
  "(B024)",
  # duplicate-try-block-exception (B025)
  "(B025)",
  # star-arg-unpacking-after-keyword-arg (B026)
  "(B026)",
  # foo(x=1, *[2, 3])  # TypeError
  "*[2,",
  # foo(y=2, *[1, 3])  # TypeError
  "*[1,",
  # empty-method-without-abstract-decorator (B027)
  "(B027)",
  # no-explicit-stacklevel (B028)
  "(B028)",
  # except-with-empty-tuple (B029)
  "(B029)",
  # except-with-non-exception-classes (B030)
  "(B030)",
  # reuse-of-groupby-generator (B031)
  "(B031)",
  # unintentional-type-annotation (B032)
  "(B032)",
  # duplicate-value (B033)
  "(B033)",
  # re-sub-positional-args (B034)
  "(B034)",
  # static-key-dict-comprehension (B035)
  "(B035)",
  # mutable-contextvar-default (B039)
  "(B039)",
  # return-in-generator (B901)
  "(B901)",
  # class-as-data-structure (B903)
  "(B903)",
  # raise-without-from-inside-except (B904)
  "(B904)",
  # zip-without-explicit-strict (B905)
  "(B905)",
  # loop-iterator-mutation (B909)
  "(B909)",
  # batched-without-explicit-strict (B911)
  "(B911)",
  # builtin-variable-shadowing (A001)
  "(A001)",
  # builtin-argument-shadowing (A002)
  "(A002)",
  # builtin-attribute-shadowing (A003)
  "(A003)",
  # builtin-import-shadowing (A004)
  "(A004)",
  # stdlib-module-shadowing (A005)
  "(A005)",
  # builtin-lambda-argument-shadowing (A006)
  "(A006)",
  # missing-trailing-comma (COM812)
  "(COM812)",
  # trailing-comma-on-bare-tuple (COM818)
  "(COM818)",
  # prohibited-trailing-comma (COM819)
  "(COM819)",
  # unnecessary-generator-list (C400)
  "(C400)",
  # unnecessary-generator-set (C401)
  "(C401)",
  # unnecessary-generator-dict (C402)
  "(C402)",
  # unnecessary-list-comprehension-set (C403)
  "(C403)",
  # unnecessary-list-comprehension-dict (C404)
  "(C404)",
  # unnecessary-literal-set (C405)
  "(C405)",
  # unnecessary-literal-dict (C406)
  "(C406)",
  # unnecessary-collection-call (C408)
  "(C408)",
  # unnecessary-literal-within-tuple-call (C409)
  "(C409)",
  # unnecessary-literal-within-list-call (C410)
  "(C410)",
  # unnecessary-list-call (C411)
  "(C411)",
  # unnecessary-call-around-sorted (C413)
  "(C413)",
  # unnecessary-double-cast-or-process (C414)
  "(C414)",
  # unnecessary-subscript-reversal (C415)
  "(C415)",
  # unnecessary-comprehension (C416)
  "(C416)",
  # unnecessary-map (C417)
  "(C417)",
  # unnecessary-literal-within-dict-call (C418)
  "(C418)",
  # unnecessary-comprehension-in-call (C419)
  "(C419)",
  # unnecessary-dict-comprehension-for-iterable (C420)
  "(C420)",
  # missing-copyright-notice (CPY001)
  "(CPY001)",
  # call-datetime-without-tzinfo (DTZ001)
  "(DTZ001)",
  # call-datetime-today (DTZ002)
  "(DTZ002)",
  # call-datetime-utcnow (DTZ003)
  "(DTZ003)",
  # call-datetime-utcfromtimestamp (DTZ004)
  "(DTZ004)",
  # call-datetime-now-without-tzinfo (DTZ005)
  "(DTZ005)",
  # call-datetime-fromtimestamp (DTZ006)
  "(DTZ006)",
  # call-datetime-strptime-without-zone (DTZ007)
  "(DTZ007)",
  # call-date-today (DTZ011)
  "(DTZ011)",
  # call-date-fromtimestamp (DTZ012)
  "(DTZ012)",
  # datetime-min-max (DTZ901)
  "(DTZ901)",
  # Timezone: UTC-14
  "UTC-14",
  # debugger (T100)
  "(T100)",
  # django-nullable-model-string-field (DJ001)
  "(DJ001)",
  # django-locals-in-render-function (DJ003)
  "(DJ003)",
  # django-exclude-with-model-form (DJ006)
  "(DJ006)",
  # django-all-with-model-form (DJ007)
  "(DJ007)",
  # django-model-without-dunder-str (DJ008)
  "(DJ008)",
  # django-unordered-body-content-in-model (DJ012)
  "(DJ012)",
  # django-non-leading-receiver-decorator (DJ013)
  "(DJ013)",
  # raw-string-in-exception (EM101)
  "(EM101)",
  # f-string-in-exception (EM102)
  "(EM102)",
  # dot-format-in-exception (EM103)
  "(EM103)",
  # shebang-not-executable (EXE001)
  "(EXE001)",
  # shebang-missing-executable-file (EXE002)
  "(EXE002)",
  # shebang-missing-python (EXE003)
  "(EXE003)",
  # shebang-leading-whitespace (EXE004)
  "(EXE004)",
  # shebang-not-first-line (EXE005)
  "(EXE005)",
  # line-contains-fixme (FIX001)
  "(FIX001)",
  # line-contains-todo (FIX002)
  "(FIX002)",
  # line-contains-xxx (FIX003)
  "(FIX003)",
  # line-contains-hack (FIX004)
  "(FIX004)",
  # future-rewritable-type-annotation (FA100)
  "(FA100)",
  # future-required-type-annotation (FA102)
  "(FA102)",
  # f-string-in-get-text-func-call (INT001)
  "(INT001)",
  # format-in-get-text-func-call (INT002)
  "(INT002)",
  # printf-in-get-text-func-call (INT003)
  "(INT003)",
  # single-line-implicit-string-concatenation (ISC001)
  "(ISC001)",
  # multi-line-implicit-string-concatenation (ISC002)
  "(ISC002)",
  # explicit-string-concatenation (ISC003)
  "(ISC003)",
  # unconventional-import-alias (ICN001)
  "(ICN001)",
  # banned-import-alias (ICN002)
  "(ICN002)",
  # banned-import-from (ICN003)
  "(ICN003)",
  # direct-logger-instantiation (LOG001)
  "(LOG001)",
  # invalid-get-logger-argument (LOG002)
  "(LOG002)",
  # log-exception-outside-except-handler (LOG004)
  "(LOG004)",
  # exception-without-exc-info (LOG007)
  "(LOG007)",
  # undocumented-warn (LOG009)
  "(LOG009)",
  # exc-info-outside-except-handler (LOG014)
  "(LOG014)",
  # root-logger-call (LOG015)
  "(LOG015)",
  # logging-string-format (G001)
  "(G001)",
  # logging-percent-format (G002)
  "(G002)",
  # logging-string-concat (G003)
  "(G003)",
  # logging-f-string (G004)
  "(G004)",
  # logging-warn (G010)
  "(G010)",
  # logging-extra-attr-clash (G101)
  "(G101)",
  # logging-exc-info (G201)
  "(G201)",
  # logging-redundant-exc-info (G202)
  "(G202)",
  # implicit-namespace-package (INP001)
  "(INP001)",
  # unnecessary-placeholder (PIE790)
  "(PIE790)",
  # duplicate-class-field-definition (PIE794)
  "(PIE794)",
  # non-unique-enums (PIE796)
  "(PIE796)",
  # unnecessary-spread (PIE800)
  "(PIE800)",
  # unnecessary-dict-kwargs (PIE804)
  "(PIE804)",
  # reimplemented-container-builtin (PIE807)
  "(PIE807)",
  # unnecessary-range-start (PIE808)
  "(PIE808)",
  # multiple-starts-ends-with (PIE810)
  "(PIE810)",
  # print (T201)
  "(T201)",
  # p-print (T203)
  "(T203)",
  # unprefixed-type-param (PYI001)
  "(PYI001)",
  # complex-if-statement-in-stub (PYI002)
  "(PYI002)",
  # unrecognized-version-info-check (PYI003)
  "(PYI003)",
  # patch-version-comparison (PYI004)
  "(PYI004)",
  # wrong-tuple-length-version-comparison (PYI005)
  "(PYI005)",
  # bad-version-info-comparison (PYI006)
  "(PYI006)",
  # unrecognized-platform-check (PYI007)
  "(PYI007)",
  # unrecognized-platform-name (PYI008)
  "(PYI008)",
  # pass-statement-stub-body (PYI009)
  "(PYI009)",
  # non-empty-stub-body (PYI010)
  "(PYI010)",
  # typed-argument-default-in-stub (PYI011)
  "(PYI011)",
  # pass-in-class-body (PYI012)
  "(PYI012)",
  # ellipsis-in-non-empty-class-body (PYI013)
  "(PYI013)",
  # argument-default-in-stub (PYI014)
  "(PYI014)",
  # assignment-default-in-stub (PYI015)
  "(PYI015)",
  # duplicate-union-member (PYI016)
  "(PYI016)",
  # complex-assignment-in-stub (PYI017)
  "(PYI017)",
  # unused-private-type-var (PYI018)
  "(PYI018)",
  # custom-type-var-for-self (PYI019)
  "(PYI019)",
  # quoted-annotation-in-stub (PYI020)
  "(PYI020)",
  # docstring-in-stub (PYI021)
  "(PYI021)",
  # collections-named-tuple (PYI024)
  "(PYI024)",
  # unaliased-collections-abc-set-import (PYI025)
  "(PYI025)",
  # type-alias-without-annotation (PYI026)
  "(PYI026)",
  # str-or-repr-defined-in-stub (PYI029)
  "(PYI029)",
  # unnecessary-literal-union (PYI030)
  "(PYI030)",
  # any-eq-ne-annotation (PYI032)
  "(PYI032)",
  # type-comment-in-stub (PYI033)
  "(PYI033)",
  # non-self-return-type (PYI034)
  "(PYI034)",
  # Type checker infers return type as `Shape`, not `Circle`.
  "checker",
  # Thus, this expression is invalid, as `Shape` has no attribute `set_radius`.
  "this",
  # unassigned-special-variable-in-stub (PYI035)
  "(PYI035)",
  # bad-exit-annotation (PYI036)
  "(PYI036)",
  # redundant-numeric-union (PYI041)
  "(PYI041)",
  # snake-case-type-alias (PYI042)
  "(PYI042)",
  # t-suffixed-type-alias (PYI043)
  "(PYI043)",
  # future-annotations-in-stub (PYI044)
  "(PYI044)",
  # iter-method-return-iterable (PYI045)
  "(PYI045)",
  # unused-private-protocol (PYI046)
  "(PYI046)",
  # unused-private-type-alias (PYI047)
  "(PYI047)",
  # stub-body-multiple-statements (PYI048)
  "(PYI048)",
  # unused-private-typed-dict (PYI049)
  "(PYI049)",
  # no-return-argument-annotation-in-stub (PYI050)
  "(PYI050)",
  # redundant-literal-union (PYI051)
  "(PYI051)",
  # unannotated-assignment-in-stub (PYI052)
  "(PYI052)",
  # string-or-bytes-too-long (PYI053)
  "(PYI053)",
  # numeric-literal-too-long (PYI054)
  "(PYI054)",
  # unnecessary-type-union (PYI055)
  "(PYI055)",
  # unsupported-method-call-on-all (PYI056)
  "(PYI056)",
  # byte-string-usage (PYI057)
  "(PYI057)",
  # generator-return-from-iter-method (PYI058)
  "(PYI058)",
  # generic-not-last-base-class (PYI059)
  "(PYI059)",
  # redundant-none-literal (PYI061)
  "(PYI061)",
  # duplicate-literal-member (PYI062)
  "(PYI062)",
  # pep484-style-positional-only-parameter (PYI063)
  "(PYI063)",
  # redundant-final-literal (PYI064)
  "(PYI064)",
  # bad-version-info-order (PYI066)
  "(PYI066)",
  # pytest-fixture-incorrect-parentheses-style (PT001)
  "(PT001)",
  # pytest-fixture-positional-args (PT002)
  "(PT002)",
  # pytest-extraneous-scope-function (PT003)
  "(PT003)",
  # pytest-missing-fixture-name-underscore (PT004)
  "(PT004)",
  # pytest-incorrect-fixture-name-underscore (PT005)
  "(PT005)",
  # pytest-parametrize-names-wrong-type (PT006)
  "(PT006)",
  # single parameter, always expecting string
  "parameter,",
  # multiple parameters, expecting tuple
  "parameters,",
  # multiple parameters, expecting tuple
  "parameters,",
  # pytest-parametrize-values-wrong-type (PT007)
  "(PT007)",
  # expected list, got tuple
  "list,",
  # expected top-level list, got tuple
  "top-level",
  # expected individual rows to be tuples, got lists
  "individual",
  # pytest-patch-with-lambda (PT008)
  "(PT008)",
  # pytest-unittest-assertion (PT009)
  "(PT009)",
  # pytest-raises-without-exception (PT010)
  "(PT010)",
  # pytest-raises-too-broad (PT011)
  "(PT011)",
  # pytest-raises-with-multiple-statements (PT012)
  "(PT012)",
  # pytest-incorrect-pytest-import (PT013)
  "(PT013)",
  # pytest-duplicate-parametrize-test-cases (PT014)
  "(PT014)",
  # pytest-assert-always-false (PT015)
  "(PT015)",
  # pytest-fail-without-message (PT016)
  "(PT016)",
  # pytest-assert-in-except (PT017)
  "(PT017)",
  # pytest-composite-assertion (PT018)
  "(PT018)",
  # pytest-fixture-param-without-value (PT019)
  "(PT019)",
  # pytest-deprecated-yield-fixture (PT020)
  "(PT020)",
  # pytest-fixture-finalizer-callback (PT021)
  "(PT021)",
  # "factory-as-fixture" pattern
  "pattern",
  # pytest-useless-yield-fixture (PT022)
  "(PT022)",
  # pytest-incorrect-mark-parentheses-style (PT023)
  "(PT023)",
  # pytest-unnecessary-asyncio-mark-on-fixture (PT024)
  "(PT024)",
  # pytest-erroneous-use-fixtures-on-fixture (PT025)
  "(PT025)",
  # pytest-use-fixtures-without-parameters (PT026)
  "(PT026)",
  # pytest-unittest-raises-assertion (PT027)
  "(PT027)",
  # pytest-parameter-with-default-argument (PT028)
  "(PT028)",
  # pytest-warns-without-warning (PT029)
  "(PT029)",
  # pytest-warns-too-broad (PT030)
  "(PT030)",
  # pytest-warns-with-multiple-statements (PT031)
  "(PT031)",
  # bad-quotes-inline-string (Q000)
  "(Q000)",
  # bad-quotes-multiline-string (Q001)
  "(Q001)",
  # bad-quotes-docstring (Q002)
  "(Q002)",
  # avoidable-escaped-quote (Q003)
  "(Q003)",
  # unnecessary-escaped-quote (Q004)
  "(Q004)",
  # unnecessary-paren-on-raise-exception (RSE102)
  "(RSE102)",
  # unnecessary-return-none (RET501)
  "(RET501)",
  # implicit-return-value (RET502)
  "(RET502)",
  # implicit-return (RET503)
  "(RET503)",
  # unnecessary-assign (RET504)
  "(RET504)",
  # superfluous-else-return (RET505)
  "(RET505)",
  # superfluous-else-raise (RET506)
  "(RET506)",
  # superfluous-else-continue (RET507)
  "(RET507)",
  # superfluous-else-break (RET508)
  "(RET508)",
  # private-member-access (SLF001)
  "(SLF001)",
  # duplicate-isinstance-call (SIM101)
  "(SIM101)",
  # collapsible-if (SIM102)
  "(SIM102)",
  # needless-bool (SIM103)
  "(SIM103)",
  # suppressible-exception (SIM105)
  "(SIM105)",
  # return-in-try-except-finally (SIM107)
  "(SIM107)",
  # if-else-block-instead-of-if-exp (SIM108)
  "(SIM108)",
  # compare-with-tuple (SIM109)
  "(SIM109)",
  # reimplemented-builtin (SIM110)
  "(SIM110)",
  # Fix safety
  "safety",
  # uncapitalized-environment-variables (SIM112)
  "(SIM112)",
  # enumerate-for-loop (SIM113)
  "(SIM113)",
  # if-with-same-arms (SIM114)
  "(SIM114)",
  # open-file-with-context-handler (SIM115)
  "(SIM115)",
  # if-else-block-instead-of-dict-lookup (SIM116)
  "(SIM116)",
  # multiple-with-statements (SIM117)
  "(SIM117)",
  # Fix safety
  "safety",
  # in-dict-keys (SIM118)
  "(SIM118)",
  # negate-equal-op (SIM201)
  "(SIM201)",
  # negate-not-equal-op (SIM202)
  "(SIM202)",
  # double-negation (SIM208)
  "(SIM208)",
  # if-expr-with-true-false (SIM210)
  "(SIM210)",
  # if-expr-with-false-true (SIM211)
  "(SIM211)",
  # if-expr-with-twisted-arms (SIM212)
  "(SIM212)",
  # expr-and-not-expr (SIM220)
  "(SIM220)",
  # expr-or-not-expr (SIM221)
  "(SIM221)",
  # expr-or-true (SIM222)
  "(SIM222)",
  # expr-and-false (SIM223)
  "(SIM223)",
  # yoda-conditions (SIM300)
  "(SIM300)",
  # if-else-block-instead-of-dict-get (SIM401)
  "(SIM401)",
  # split-static-string (SIM905)
  "(SIM905)",
  # dict-get-with-none-default (SIM910)
  "(SIM910)",
  # zip-dict-keys-and-values (SIM911)
  "(SIM911)",
  # no-slots-in-str-subclass (SLOT000)
  "(SLOT000)",
  # no-slots-in-tuple-subclass (SLOT001)
  "(SLOT001)",
  # no-slots-in-namedtuple-subclass (SLOT002)
  "(SLOT002)",
  # banned-api (TID251)
  "(TID251)",
  # relative-imports (TID252)
  "(TID252)",
  # banned-module-level-imports (TID253)
  "(TID253)",
  # invalid-todo-tag (TD001)
  "(TD001)",
  # FIXME(ruff): this should get fixed!
  "this",
  # TODO(ruff): this is now fixed!
  "this",
  # missing-todo-author (TD002)
  "(TD002)",
  # TODO: should assign an author here
  "should",
  # TODO(charlie): now an author is assigned
  "now",
  # missing-todo-link (TD003)
  "(TD003)",
  # TODO: this link has no issue
  "this",
  # TODO(charlie): this comment has an issue link
  "this",
  # https://github.com/astral-sh/ruff/issues/3870
  "",
  # TODO(charlie): this comment has a 3-digit issue code
  "this",
  # 003
  "",
  # TODO(charlie): https://github.com/astral-sh/ruff/issues/3870
  "https://github.com/astral-sh/ruff/issues/3870",
  # this comment has an issue link
  "comment",
  # TODO(charlie): #003 this comment has a 3-digit issue code
  "#003",
  # with leading character `#`
  "leading",
  # TODO(charlie): this comment has an issue code (matches the regex `[A-Z]+\-?\d+`)
  "this",
  # SIXCHR-003
  "",
  # missing-todo-colon (TD004)
  "(TD004)",
  # TODO(charlie) fix this colon
  "fix",
  # TODO(charlie): colon fixed
  "colon",
  # missing-todo-description (TD005)
  "(TD005)",
  # TODO(charlie)
  "",
  # TODO(charlie): fix some issue
  "fix",
  # invalid-todo-capitalization (TD006)
  "(TD006)",
  # todo(charlie): capitalize this
  "capitalize",
  # TODO(charlie): this is capitalized
  "this",
  # missing-space-after-todo-colon (TD007)
  "(TD007)",
  # TODO(charlie):fix this
  "this",
  # TODO(charlie): fix this
  "fix",
  # typing-only-first-party-import (TC001)
  "(TC001)",
  # typing-only-third-party-import (TC002)
  "(TC002)",
  # typing-only-standard-library-import (TC003)
  "(TC003)",
  # runtime-import-in-type-checking-block (TC004)
  "(TC004)",
  # empty-type-checking-block (TC005)
  "(TC005)",
  # runtime-cast-value (TC006)
  "(TC006)",
  # unquoted-type-alias (TC007)
  "(TC007)",
  # quoted-type-alias (TC008)
  "(TC008)",
  # runtime-string-union (TC010)
  "(TC010)",
  # unused-function-argument (ARG001)
  "(ARG001)",
  # unused-method-argument (ARG002)
  "(ARG002)",
  # unused-class-method-argument (ARG003)
  "(ARG003)",
  # unused-static-method-argument (ARG004)
  "(ARG004)",
  # unused-lambda-argument (ARG005)
  "(ARG005)",
  # os-path-abspath (PTH100)
  "(PTH100)",
  # os-chmod (PTH101)
  "(PTH101)",
  # os-mkdir (PTH102)
  "(PTH102)",
  # os-makedirs (PTH103)
  "(PTH103)",
  # os-rename (PTH104)
  "(PTH104)",
  # os-replace (PTH105)
  "(PTH105)",
  # os-rmdir (PTH106)
  "(PTH106)",
  # os-remove (PTH107)
  "(PTH107)",
  # os-unlink (PTH108)
  "(PTH108)",
  # os-getcwd (PTH109)
  "(PTH109)",
  # os-path-exists (PTH110)
  "(PTH110)",
  # os-path-expanduser (PTH111)
  "(PTH111)",
  # os-path-isdir (PTH112)
  "(PTH112)",
  # os-path-isfile (PTH113)
  "(PTH113)",
  # os-path-islink (PTH114)
  "(PTH114)",
  # os-readlink (PTH115)
  "(PTH115)",
  # os-stat (PTH116)
  "(PTH116)",
  # os-path-isabs (PTH117)
  "(PTH117)",
  # os-path-join (PTH118)
  "(PTH118)",
  # os-path-basename (PTH119)
  "(PTH119)",
  # os-path-dirname (PTH120)
  "(PTH120)",
  # os-path-samefile (PTH121)
  "(PTH121)",
  # os-path-splitext (PTH122)
  "(PTH122)",
  # builtin-open (PTH123)
  "(PTH123)",
  # py-path (PTH124)
  "(PTH124)",
  # path-constructor-current-directory (PTH201)
  "(PTH201)",
  # os-path-getsize (PTH202)
  "(PTH202)",
  # os-path-getatime (PTH203)
  "(PTH203)",
  # os-path-getmtime (PTH204)
  "(PTH204)",
  # os-path-getctime (PTH205)
  "(PTH205)",
  # os-sep-split (PTH206)
  "(PTH206)",
  # Iterating over the path parts
  "over",
  # Iterating over the path parts
  "over",
  # glob (PTH207)
  "(PTH207)",
  # os-listdir (PTH208)
  "(PTH208)",
  # invalid-pathlib-with-suffix (PTH210)
  "(PTH210)",
  # os-symlink (PTH211)
  "(PTH211)",
  # static-join-to-f-string (FLY002)
  "(FLY002)",
  # Fix safety
  "safety",
  # unsorted-imports (I001)
  "(I001)",
  # missing-required-import (I002)
  "(I002)",
  # complex-structure (C901)
  "(C901)",
  # numpy-deprecated-type-alias (NPY001)
  "(NPY001)",
  # numpy-legacy-random (NPY002)
  "(NPY002)",
  # numpy-deprecated-function (NPY003)
  "(NPY003)",
  # numpy2-deprecation (NPY201)
  "(NPY201)",
  # invalid-class-name (N801)
  "(N801)",
  # invalid-function-name (N802)
  "(N802)",
  # invalid-argument-name (N803)
  "(N803)",
  # invalid-first-argument-name-for-class-method (N804)
  "(N804)",
  # invalid-first-argument-name-for-method (N805)
  "(N805)",
  # non-lowercase-variable-in-function (N806)
  "(N806)",
  # dunder-function-name (N807)
  "(N807)",
  # constant-imported-as-non-constant (N811)
  "(N811)",
  # lowercase-imported-as-non-lowercase (N812)
  "(N812)",
  # camelcase-imported-as-lowercase (N813)
  "(N813)",
  # camelcase-imported-as-constant (N814)
  "(N814)",
  # mixed-case-variable-in-class-scope (N815)
  "(N815)",
  # mixed-case-variable-in-global-scope (N816)
  "(N816)",
  # camelcase-imported-as-acronym (N817)
  "(N817)",
  # error-suffix-on-exception-name (N818)
  "(N818)",
  # invalid-module-name (N999)
  "(N999)",
  # pandas-use-of-inplace-argument (PD002)
  "(PD002)",
  # pandas-use-of-dot-is-null (PD003)
  "(PD003)",
  # pandas-use-of-dot-not-null (PD004)
  "(PD004)",
  # pandas-use-of-dot-ix (PD007)
  "(PD007)",
  # pandas-use-of-dot-at (PD008)
  "(PD008)",
  # pandas-use-of-dot-iat (PD009)
  "(PD009)",
  # pandas-use-of-dot-pivot-or-unstack (PD010)
  "(PD010)",
  # pandas-use-of-dot-values (PD011)
  "(PD011)",
  # pandas-use-of-dot-read-table (PD012)
  "(PD012)",
  # pandas-use-of-dot-stack (PD013)
  "(PD013)",
  # pandas-use-of-pd-merge (PD015)
  "(PD015)",
  # pandas-nunique-constant-series-check (PD101)
  "(PD101)",
  # pandas-df-variable-name (PD901)
  "(PD901)",
  # unnecessary-list-cast (PERF101)
  "(PERF101)",
  # incorrect-dict-iterator (PERF102)
  "(PERF102)",
  # try-except-in-loop (PERF203)
  "(PERF203)",
  # `try`/`except` that could be moved out of the loop:
  "that",
  # `try`/`except` used when "look before you leap" idioms could be used:
  "used",
  # manual-list-comprehension (PERF401)
  "(PERF401)",
  # manual-list-copy (PERF402)
  "(PERF402)",
  # manual-dict-comprehension (PERF403)
  "(PERF403)",
  # mixed-spaces-and-tabs (E101)
  "(E101)",
  # indentation-with-invalid-multiple (E111)
  "(E111)",
  # no-indented-block (E112)
  "(E112)",
  # unexpected-indentation (E113)
  "(E113)",
  # indentation-with-invalid-multiple-comment (E114)
  "(E114)",
  # no-indented-block-comment (E115)
  "(E115)",
  # Hi
  "",
  # unexpected-indentation-comment (E116)
  "(E116)",
  # b = 2
  "=",
  # over-indented (E117)
  "(E117)",
  # whitespace-after-open-bracket (E201)
  "(E201)",
  # whitespace-before-close-bracket (E202)
  "(E202)",
  # whitespace-before-punctuation (E203)
  "(E203)",
  # whitespace-after-decorator (E204)
  "(E204)",
  # whitespace-before-parameters (E211)
  "(E211)",
  # multiple-spaces-before-operator (E221)
  "(E221)",
  # multiple-spaces-after-operator (E222)
  "(E222)",
  # tab-before-operator (E223)
  "(E223)",
  # tab-after-operator (E224)
  "(E224)",
  # missing-whitespace-around-operator (E225)
  "(E225)",
  # missing-whitespace-around-arithmetic-operator (E226)
  "(E226)",
  # missing-whitespace-around-bitwise-or-shift-operator (E227)
  "(E227)",
  # missing-whitespace-around-modulo-operator (E228)
  "(E228)",
  # missing-whitespace (E231)
  "(E231)",
  # multiple-spaces-after-comma (E241)
  "(E241)",
  # tab-after-comma (E242)
  "(E242)",
  # unexpected-spaces-around-keyword-parameter-equals (E251)
  "(E251)",
  # missing-whitespace-around-parameter-equals (E252)
  "(E252)",
  # too-few-spaces-before-inline-comment (E261)
  "(E261)",
  # no-space-after-inline-comment (E262)
  "(E262)",
  # no-space-after-block-comment (E265)
  "(E265)",
  # Block comment
  "comment",
  # multiple-leading-hashes-for-block-comment (E266)
  "(E266)",
  # Block comment
  "comment",
  # Block header
  "header",
  # multiple-spaces-after-keyword (E271)
  "(E271)",
  # multiple-spaces-before-keyword (E272)
  "(E272)",
  # tab-after-keyword (E273)
  "(E273)",
  # tab-before-keyword (E274)
  "(E274)",
  # missing-whitespace-after-keyword (E275)
  "(E275)",
  # blank-line-between-methods (E301)
  "(E301)",
  # blank-lines-top-level (E302)
  "(E302)",
  # too-many-blank-lines (E303)
  "(E303)",
  # blank-line-after-decorator (E304)
  "(E304)",
  # blank-lines-after-function-or-class (E305)
  "(E305)",
  # blank-lines-before-nested-definition (E306)
  "(E306)",
  # multiple-imports-on-one-line (E401)
  "(E401)",
  # module-import-not-at-top-of-file (E402)
  "(E402)",
  # line-too-long (E501)
  "(E501)",
  # redundant-backslash (E502)
  "(E502)",
  # multiple-statements-on-one-line-colon (E701)
  "(E701)",
  # multiple-statements-on-one-line-semicolon (E702)
  "(E702)",
  # useless-semicolon (E703)
  "(E703)",
  # none-comparison (E711)
  "(E711)",
  # true-false-comparison (E712)
  "(E712)",
  # not-in-test (E713)
  "(E713)",
  # not-is-test (E714)
  "(E714)",
  # type-comparison (E721)
  "(E721)",
  # array([False,  True])
  "True])",
  # False
  "",
  # bare-except (E722)
  "(E722)",
  # lambda-assignment (E731)
  "(E731)",
  # ambiguous-variable-name (E741)
  "(E741)",
  # ambiguous-class-name (E742)
  "(E742)",
  # ambiguous-function-name (E743)
  "(E743)",
  # io-error (E902)
  "(E902)",
  # syntax-error (E999)
  "(E999)",
  # tab-indentation (W191)
  "(W191)",
  # trailing-whitespace (W291)
  "(W291)",
  # missing-newline-at-end-of-file (W292)
  "(W292)",
  # blank-line-with-whitespace (W293)
  "(W293)",
  # too-many-newlines-at-end-of-file (W391)
  "(W391)",
  # doc-line-too-long (W505)
  "(W505)",
  # invalid-escape-sequence (W605)
  "(W605)",
  # docstring-missing-returns (DOC201)
  "(DOC201)",
  # docstring-extraneous-returns (DOC202)
  "(DOC202)",
  # docstring-missing-yields (DOC402)
  "(DOC402)",
  # docstring-extraneous-yields (DOC403)
  "(DOC403)",
  # docstring-missing-exception (DOC501)
  "(DOC501)",
  # docstring-extraneous-exception (DOC502)
  "(DOC502)",
  # undocumented-public-module (D100)
  "(D100)",
  # undocumented-public-class (D101)
  "(D101)",
  # undocumented-public-method (D102)
  "(D102)",
  # undocumented-public-function (D103)
  "(D103)",
  # undocumented-public-package (D104)
  "(D104)",
  # undocumented-magic-method (D105)
  "(D105)",
  # undocumented-public-nested-class (D106)
  "(D106)",
  # undocumented-public-init (D107)
  "(D107)",
  # unnecessary-multiline-docstring (D200)
  "(D200)",
  # blank-line-before-function (D201)
  "(D201)",
  # blank-line-after-function (D202)
  "(D202)",
  # incorrect-blank-line-before-class (D203)
  "(D203)",
  # incorrect-blank-line-after-class (D204)
  "(D204)",
  # missing-blank-line-after-summary (D205)
  "(D205)",
  # docstring-tab-indentation (D206)
  "(D206)",
  # under-indentation (D207)
  "(D207)",
  # over-indentation (D208)
  "(D208)",
  # new-line-after-last-paragraph (D209)
  "(D209)",
  # surrounding-whitespace (D210)
  "(D210)",
  # blank-line-before-class (D211)
  "(D211)",
  # multi-line-summary-first-line (D212)
  "(D212)",
  # multi-line-summary-second-line (D213)
  "(D213)",
  # overindented-section (D214)
  "(D214)",
  # overindented-section-underline (D215)
  "(D215)",
  # triple-single-quotes (D300)
  "(D300)",
  # escape-sequence-in-docstring (D301)
  "(D301)",
  # missing-trailing-period (D400)
  "(D400)",
  # non-imperative-mood (D401)
  "(D401)",
  # signature-in-docstring (D402)
  "(D402)",
  # first-word-uncapitalized (D403)
  "(D403)",
  # docstring-starts-with-this (D404)
  "(D404)",
  # non-capitalized-section-name (D405)
  "(D405)",
  # missing-new-line-after-section-name (D406)
  "(D406)",
  # The `Parameters`, `Returns` and `Raises` section headers are all followed
  "`Parameters`,",
  # by a colon in this function's docstring:
  "a",
  # missing-dashed-underline-after-section (D407)
  "(D407)",
  # missing-section-underline-after-name (D408)
  "(D408)",
  # mismatched-section-underline-length (D409)
  "(D409)",
  # no-blank-line-after-section (D410)
  "(D410)",
  # no-blank-line-before-section (D411)
  "(D411)",
  # blank-lines-between-header-and-content (D412)
  "(D412)",
  # missing-blank-line-after-last-section (D413)
  "(D413)",
  # empty-docstring-section (D414)
  "(D414)",
  # missing-terminal-punctuation (D415)
  "(D415)",
  # missing-section-name-colon (D416)
  "(D416)",
  # undocumented-param (D417)
  "(D417)",
  # overload-with-docstring (D418)
  "(D418)",
  # empty-docstring (D419)
  "(D419)",
  # unused-import (F401)
  "(F401)",
  # __init__.py
  "",
  # import-shadowed-by-loop-var (F402)
  "(F402)",
  # undefined-local-with-import-star (F403)
  "(F403)",
  # late-future-import (F404)
  "(F404)",
  # undefined-local-with-import-star-usage (F405)
  "(F405)",
  # undefined-local-with-nested-import-star-usage (F406)
  "(F406)",
  # future-feature-not-defined (F407)
  "(F407)",
  # percent-format-invalid-format (F501)
  "(F501)",
  # percent-format-expected-mapping (F502)
  "(F502)",
  # percent-format-expected-sequence (F503)
  "(F503)",
  # percent-format-extra-named-arguments (F504)
  "(F504)",
  # percent-format-missing-argument (F505)
  "(F505)",
  # percent-format-mixed-positional-and-named (F506)
  "(F506)",
  # percent-format-positional-count-mismatch (F507)
  "(F507)",
  # percent-format-star-requires-sequence (F508)
  "(F508)",
  # percent-format-unsupported-format-character (F509)
  "(F509)",
  # string-dot-format-invalid-format (F521)
  "(F521)",
  # string-dot-format-extra-named-arguments (F522)
  "(F522)",
  # string-dot-format-extra-positional-arguments (F523)
  "(F523)",
  # string-dot-format-missing-arguments (F524)
  "(F524)",
  # string-dot-format-mixing-automatic (F525)
  "(F525)",
  # f-string-missing-placeholders (F541)
  "(F541)",
  # Will not be flagged.
  "not",
  # Will be flagged.
  "be",
  # multi-value-repeated-key-literal (F601)
  "(F601)",
  # multi-value-repeated-key-variable (F602)
  "(F602)",
  # expressions-in-star-assignment (F621)
  "(F621)",
  # multiple-starred-expressions (F622)
  "(F622)",
  # assert-tuple (F631)
  "(F631)",
  # is-literal (F632)
  "(F632)",
  # invalid-print-syntax (F633)
  "(F633)",
  # if-tuple (F634)
  "(F634)",
  # break-outside-loop (F701)
  "(F701)",
  # continue-outside-loop (F702)
  "(F702)",
  # yield-outside-function (F704)
  "(F704)",
  # return-outside-function (F706)
  "(F706)",
  # default-except-not-last (F707)
  "(F707)",
  # forward-annotation-syntax-error (F722)
  "(F722)",
  # redefined-while-unused (F811)
  "(F811)",
  # undefined-name (F821)
  "(F821)",
  # undefined-export (F822)
  "(F822)",
  # undefined-local (F823)
  "(F823)",
  # unused-variable (F841)
  "(F841)",
  # unused-annotation (F842)
  "(F842)",
  # raise-not-implemented (F901)
  "(F901)",
  # eval (PGH001)
  "(PGH001)",
  # deprecated-log-warn (PGH002)
  "(PGH002)",
  # blanket-type-ignore (PGH003)
  "(PGH003)",
  # blanket-noqa (PGH004)
  "(PGH004)",
  # invalid-mock-access (PGH005)
  "(PGH005)",
  # type-name-incorrect-variance (PLC0105)
  "(PLC0105)",
  # type-bivariance (PLC0131)
  "(PLC0131)",
  # type-param-name-mismatch (PLC0132)
  "(PLC0132)",
  # single-string-slots (PLC0205)
  "(PLC0205)",
  # dict-index-missing-items (PLC0206)
  "(PLC0206)",
  # missing-maxsplit-arg (PLC0207)
  "(PLC0207)",
  # iteration-over-set (PLC0208)
  "(PLC0208)",
  # useless-import-alias (PLC0414)
  "(PLC0414)",
  # import-outside-top-level (PLC0415)
  "(PLC0415)",
  # len-test (PLC1802)
  "(PLC1802)",
  # compare-to-empty-string (PLC1901)
  "(PLC1901)",
  # non-ascii-name (PLC2401)
  "(PLC2401)",
  # non-ascii-import-name (PLC2403)
  "(PLC2403)",
  # import-private-name (PLC2701)
  "(PLC2701)",
  # unnecessary-dunder-call (PLC2801)
  "(PLC2801)",
  # unnecessary-direct-lambda-call (PLC3002)
  "(PLC3002)",
  # yield-in-init (PLE0100)
  "(PLE0100)",
  # return-in-init (PLE0101)
  "(PLE0101)",
  # nonlocal-and-global (PLE0115)
  "(PLE0115)",
  # continue-in-finally (PLE0116)
  "(PLE0116)",
  # nonlocal-without-binding (PLE0117)
  "(PLE0117)",
  # load-before-global-declaration (PLE0118)
  "(PLE0118)",
  # non-slot-assignment (PLE0237)
  "(PLE0237)",
  # duplicate-bases (PLE0241)
  "(PLE0241)",
  # unexpected-special-method-signature (PLE0302)
  "(PLE0302)",
  # invalid-length-return-type (PLE0303)
  "(PLE0303)",
  # invalid-bool-return-type (PLE0304)
  "(PLE0304)",
  # invalid-index-return-type (PLE0305)
  "(PLE0305)",
  # invalid-str-return-type (PLE0307)
  "(PLE0307)",
  # invalid-bytes-return-type (PLE0308)
  "(PLE0308)",
  # invalid-hash-return-type (PLE0309)
  "(PLE0309)",
  # invalid-all-object (PLE0604)
  "(PLE0604)",
  # invalid-all-format (PLE0605)
  "(PLE0605)",
  # potential-index-error (PLE0643)
  "(PLE0643)",
  # misplaced-bare-raise (PLE0704)
  "(PLE0704)",
  # repeated-keyword-argument (PLE1132)
  "(PLE1132)",
  # dict-iter-missing-items (PLE1141)
  "(PLE1141)",
  # await-outside-async (PLE1142)
  "(PLE1142)",
  # logging-too-many-args (PLE1205)
  "(PLE1205)",
  # logging-too-few-args (PLE1206)
  "(PLE1206)",
  # bad-string-format-character (PLE1300)
  "(PLE1300)",
  # `z` is not a valid format type.
  "is",
  # bad-string-format-type (PLE1307)
  "(PLE1307)",
  # bad-str-strip-call (PLE1310)
  "(PLE1310)",
  # Evaluates to "foo".
  "to",
  # Evaluates to "foo".
  "to",
  # Evaluates to "foo".
  "to",
  # invalid-envvar-value (PLE1507)
  "(PLE1507)",
  # singledispatch-method (PLE1519)
  "(PLE1519)",
  # singledispatchmethod-function (PLE1520)
  "(PLE1520)",
  # yield-from-in-async-function (PLE1700)
  "(PLE1700)",
  # bidirectional-unicode (PLE2502)
  "(PLE2502)",
  # invalid-character-backspace (PLE2510)
  "(PLE2510)",
  # invalid-character-sub (PLE2512)
  "(PLE2512)",
  # invalid-character-esc (PLE2513)
  "(PLE2513)",
  # invalid-character-nul (PLE2514)
  "(PLE2514)",
  # invalid-character-zero-width-space (PLE2515)
  "(PLE2515)",
  # modified-iterating-set (PLE4703)
  "(PLE4703)",
  # comparison-with-itself (PLR0124)
  "(PLR0124)",
  # comparison-of-constant (PLR0133)
  "(PLR0133)",
  # no-classmethod-decorator (PLR0202)
  "(PLR0202)",
  # no-staticmethod-decorator (PLR0203)
  "(PLR0203)",
  # property-with-parameters (PLR0206)
  "(PLR0206)",
  # manual-from-import (PLR0402)
  "(PLR0402)",
  # too-many-public-methods (PLR0904)
  "(PLR0904)",
  # too-many-return-statements (PLR0911)
  "(PLR0911)",
  # too-many-branches (PLR0912)
  "(PLR0912)",
  # too-many-arguments (PLR0913)
  "(PLR0913)",
  # too-many-locals (PLR0914)
  "(PLR0914)",
  # too-many-statements (PLR0915)
  "(PLR0915)",
  # too-many-boolean-expressions (PLR0916)
  "(PLR0916)",
  # too-many-positional-arguments (PLR0917)
  "(PLR0917)",
  # repeated-isinstance-calls (PLR1701)
  "(PLR1701)",
  # too-many-nested-blocks (PLR1702)
  "(PLR1702)",
  # redefined-argument-from-local (PLR1704)
  "(PLR1704)",
  # and-or-ternary (PLR1706)
  "(PLR1706)",
  # useless-return (PLR1711)
  "(PLR1711)",
  # repeated-equality-comparison (PLR1714)
  "(PLR1714)",
  # boolean-chained-comparison (PLR1716)
  "(PLR1716)",
  # sys-exit-alias (PLR1722)
  "(PLR1722)",
  # if-stmt-min-max (PLR1730)
  "(PLR1730)",
  # unnecessary-dict-index-lookup (PLR1733)
  "(PLR1733)",
  # unnecessary-list-index-lookup (PLR1736)
  "(PLR1736)",
  # magic-value-comparison (PLR2004)
  "(PLR2004)",
  # empty-comment (PLR2044)
  "(PLR2044)",
  # collapsible-else-if (PLR5501)
  "(PLR5501)",
  # non-augmented-assignment (PLR6104)
  "(PLR6104)",
  # literal-membership (PLR6201)
  "(PLR6201)",
  # no-self-use (PLR6301)
  "(PLR6301)",
  # unnecessary-lambda (PLW0108)
  "(PLW0108)",
  # useless-else-on-loop (PLW0120)
  "(PLW0120)",
  # self-assigning-variable (PLW0127)
  "(PLW0127)",
  # redeclared-assigned-name (PLW0128)
  "(PLW0128)",
  # this is assuming you want to assign 3 to `a`
  "is",
  # assert-on-string-literal (PLW0129)
  "(PLW0129)",
  # named-expr-without-context (PLW0131)
  "(PLW0131)",
  # useless-exception-statement (PLW0133)
  "(PLW0133)",
  # nan-comparison (PLW0177)
  "(PLW0177)",
  # bad-staticmethod-argument (PLW0211)
  "(PLW0211)",
  # redefined-slots-in-subclass (PLW0244)
  "(PLW0244)",
  # super-without-brackets (PLW0245)
  "(PLW0245)",
  # import-self (PLW0406)
  "(PLW0406)",
  # file: this_file.py
  "this_file.py",
  # global-variable-not-assigned (PLW0602)
  "(PLW0602)",
  # global-statement (PLW0603)
  "(PLW0603)",
  # global-at-module-level (PLW0604)
  "(PLW0604)",
  # self-or-cls-assignment (PLW0642)
  "(PLW0642)",
  # binary-op-exception (PLW0711)
  "(PLW0711)",
  # bad-open-mode (PLW1501)
  "(PLW1501)",
  # shallow-copy-environ (PLW1507)
  "(PLW1507)",
  # invalid-envvar-default (PLW1508)
  "(PLW1508)",
  # subprocess-popen-preexec-fn (PLW1509)
  "(PLW1509)",
  # subprocess-run-without-check (PLW1510)
  "(PLW1510)",
  # unspecified-encoding (PLW1514)
  "(PLW1514)",
  # eq-without-hash (PLW1641)
  "(PLW1641)",
  # useless-with-lock (PLW2101)
  "(PLW2101)",
  # redefined-loop-name (PLW2901)
  "(PLW2901)",
  # bad-dunder-method-name (PLW3201)
  "(PLW3201)",
  # nested-min-max (PLW3301)
  "(PLW3301)",
  # useless-metaclass-type (UP001)
  "(UP001)",
  # type-of-primitive (UP003)
  "(UP003)",
  # useless-object-inheritance (UP004)
  "(UP004)",
  # deprecated-unittest-alias (UP005)
  "(UP005)",
  # non-pep585-annotation (UP006)
  "(UP006)",
  # non-pep604-annotation-union (UP007)
  "(UP007)",
  # super-call-with-parameters (UP008)
  "(UP008)",
  # utf8-encoding-declaration (UP009)
  "(UP009)",
  # -*- coding: utf-8 -*-
  "coding:",
  # unnecessary-future-import (UP010)
  "(UP010)",
  # lru-cache-without-parameters (UP011)
  "(UP011)",
  # unnecessary-encode-utf8 (UP012)
  "(UP012)",
  # convert-typed-dict-functional-to-class (UP013)
  "(UP013)",
  # convert-named-tuple-functional-to-class (UP014)
  "(UP014)",
  # redundant-open-modes (UP015)
  "(UP015)",
  # datetime-timezone-utc (UP017)
  "(UP017)",
  # native-literals (UP018)
  "(UP018)",
  # typing-text-str-alias (UP019)
  "(UP019)",
  # open-alias (UP020)
  "(UP020)",
  # replace-universal-newlines (UP021)
  "(UP021)",
  # replace-stdout-stderr (UP022)
  "(UP022)",
  # deprecated-c-element-tree (UP023)
  "(UP023)",
  # os-error-alias (UP024)
  "(UP024)",
  # unicode-kind-prefix (UP025)
  "(UP025)",
  # deprecated-mock-import (UP026)
  "(UP026)",
  # unpacked-list-comprehension (UP027)
  "(UP027)",
  # yield-in-for-loop (UP028)
  "(UP028)",
  # unnecessary-builtin-import (UP029)
  "(UP029)",
  # format-literals (UP030)
  "(UP030)",
  # printf-string-formatting (UP031)
  "(UP031)",
  # f-string (UP032)
  "(UP032)",
  # lru-cache-with-maxsize-none (UP033)
  "(UP033)",
  # extraneous-parentheses (UP034)
  "(UP034)",
  # deprecated-import (UP035)
  "(UP035)",
  # outdated-version-block (UP036)
  "(UP036)",
  # quoted-annotation (UP037)
  "(UP037)",
  # non-pep604-isinstance (UP038)
  "(UP038)",
  # unnecessary-class-parentheses (UP039)
  "(UP039)",
  # non-pep695-type-alias (UP040)
  "(UP040)",
  # timeout-error-alias (UP041)
  "(UP041)",
  # replace-str-enum (UP042)
  "(UP042)",
  # Python 3.10
  "3.10",
  # Python 3.11
  "3.11",
  # unnecessary-default-type-args (UP043)
  "(UP043)",
  # non-pep646-unpack (UP044)
  "(UP044)",
  # non-pep604-annotation-optional (UP045)
  "(UP045)",
  # non-pep695-generic-class (UP046)
  "(UP046)",
  # non-pep695-generic-function (UP047)
  "(UP047)",
  # private-type-parameter (UP049)
  "(UP049)",
  # useless-class-metaclass-type (UP050)
  "(UP050)",
  # read-whole-file (FURB101)
  "(FURB101)",
  # write-whole-file (FURB103)
  "(FURB103)",
  # print-empty-string (FURB105)
  "(FURB105)",
  # if-exp-instead-of-or-operator (FURB110)
  "(FURB110)",
  # repeated-append (FURB113)
  "(FURB113)",
  # f-string-number-format (FURB116)
  "(FURB116)",
  # reimplemented-operator (FURB118)
  "(FURB118)",
  # for-loop-writes (FURB122)
  "(FURB122)",
  # readlines-in-for (FURB129)
  "(FURB129)",
  # delete-full-slice (FURB131)
  "(FURB131)",
  # check-and-remove-from-set (FURB132)
  "(FURB132)",
  # if-expr-min-max (FURB136)
  "(FURB136)",
  # reimplemented-starmap (FURB140)
  "(FURB140)",
  # for-loop-set-mutations (FURB142)
  "(FURB142)",
  # slice-copy (FURB145)
  "(FURB145)",
  # unnecessary-enumerate (FURB148)
  "(FURB148)",
  # math-constant (FURB152)
  "(FURB152)",
  # repeated-global (FURB154)
  "(FURB154)",
  # hardcoded-string-charset (FURB156)
  "(FURB156)",
  # verbose-decimal-constructor (FURB157)
  "(FURB157)",
  # bit-count (FURB161)
  "(FURB161)",
  # fromisoformat-replace-z (FURB162)
  "(FURB162)",
  # redundant-log-base (FURB163)
  "(FURB163)",
  # unnecessary-from-float (FURB164)
  "(FURB164)",
  # int-on-sliced-str (FURB166)
  "(FURB166)",
  # regex-flag-alias (FURB167)
  "(FURB167)",
  # isinstance-type-none (FURB168)
  "(FURB168)",
  # type-none-comparison (FURB169)
  "(FURB169)",
  # single-item-membership-test (FURB171)
  "(FURB171)",
  # implicit-cwd (FURB177)
  "(FURB177)",
  # meta-class-abc-meta (FURB180)
  "(FURB180)",
  # hashlib-digest-hex (FURB181)
  "(FURB181)",
  # list-reverse-copy (FURB187)
  "(FURB187)",
  # slice-to-remove-prefix-or-suffix (FURB188)
  "(FURB188)",
  # subclass-builtin (FURB189)
  "(FURB189)",
  # sorted-min-max (FURB192)
  "(FURB192)",
  # ambiguous-unicode-character-string (RUF001)
  "(RUF001)",
  # ambiguous-unicode-character-docstring (RUF002)
  "(RUF002)",
  # ambiguous-unicode-character-comment (RUF003)
  "(RUF003)",
  # collection-literal-concatenation (RUF005)
  "(RUF005)",
  # asyncio-dangling-task (RUF006)
  "(RUF006)",
  # zip-instead-of-pairwise (RUF007)
  "(RUF007)",
  # mutable-dataclass-default (RUF008)
  "(RUF008)",
  # function-call-in-dataclass-default-argument (RUF009)
  "(RUF009)",
  # explicit-f-string-type-conversion (RUF010)
  "(RUF010)",
  # ruff-static-key-dict-comprehension (RUF011)
  "(RUF011)",
  # mutable-class-default (RUF012)
  "(RUF012)",
  # implicit-optional (RUF013)
  "(RUF013)",
  # unnecessary-iterable-allocation-for-first-element (RUF015)
  "(RUF015)",
  # invalid-index-type (RUF016)
  "(RUF016)",
  # quadratic-list-summation (RUF017)
  "(RUF017)",
  # assignment-in-assert (RUF018)
  "(RUF018)",
  # unnecessary-key-check (RUF019)
  "(RUF019)",
  # never-union (RUF020)
  "(RUF020)",
  # parenthesize-chained-operators (RUF021)
  "(RUF021)",
  # unsorted-dunder-all (RUF022)
  "(RUF022)",
  # unsorted-dunder-slots (RUF023)
  "(RUF023)",
  # mutable-fromkeys-value (RUF024)
  "(RUF024)",
  # default-factory-kwarg (RUF026)
  "(RUF026)",
  # missing-f-string-syntax (RUF027)
  "(RUF027)",
  # invalid-formatter-suppression-comment (RUF028)
  "(RUF028)",
  # fmt: off
  "off",
  # unused-async (RUF029)
  "(RUF029)",
  # assert-with-print-message (RUF030)
  "(RUF030)",
  # incorrectly-parenthesized-tuple-in-subscript (RUF031)
  "(RUF031)",
  # decimal-from-float-literal (RUF032)
  "(RUF032)",
  # post-init-default (RUF033)
  "(RUF033)",
  # useless-if-else (RUF034)
  "(RUF034)",
  # ruff-unsafe-markup-use (RUF035)
  "(RUF035)",
  # none-not-at-end-of-union (RUF036)
  "(RUF036)",
  # unnecessary-empty-iterable-within-deque-call (RUF037)
  "(RUF037)",
  # redundant-bool-literal (RUF038)
  "(RUF038)",
  # unraw-re-pattern (RUF039)
  "(RUF039)",
  # invalid-assert-message-literal-argument (RUF040)
  "(RUF040)",
  # unnecessary-nested-literal (RUF041)
  "(RUF041)",
  # pytest-raises-ambiguous-pattern (RUF043)
  "(RUF043)",
  # implicit-class-var-in-dataclass (RUF045)
  "(RUF045)",
  # unnecessary-cast-to-int (RUF046)
  "(RUF046)",
  # needless-else (RUF047)
  "(RUF047)",
  # map-int-version-parsing (RUF048)
  "(RUF048)",
  # ValueError: invalid literal for int() with base 10: 'post1'
  "invalid",
  # dataclass-enum (RUF049)
  "(RUF049)",
  # if-key-in-dict-del (RUF051)
  "(RUF051)",
  # used-dummy-variable (RUF052)
  "(RUF052)",
  # class-with-mixed-type-vars (RUF053)
  "(RUF053)",
  # TypeError: Cannot inherit from Generic[...] multiple times.
  "Cannot",
  # indented-form-feed (RUF054)
  "(RUF054)",
  # unnecessary-regular-expression (RUF055)
  "(RUF055)",
  # falsy-dict-get-fallback (RUF056)
  "(RUF056)",
  # unnecessary-round (RUF057)
  "(RUF057)",
  # starmap-zip (RUF058)
  "(RUF058)",
  # unused-unpacked-variable (RUF059)
  "(RUF059)",
  # in-empty-collection (RUF060)
  "(RUF060)",
  # unused-noqa (RUF100)
  "(RUF100)",
  # redirected-noqa (RUF101)
  "(RUF101)",
  # invalid-rule-code (RUF102)
  "(RUF102)",
  # invalid-pyproject-toml (RUF200)
  "(RUF200)",
  # raise-vanilla-class (TRY002)
  "(TRY002)",
  # raise-vanilla-args (TRY003)
  "(TRY003)",
  # type-check-without-type-error (TRY004)
  "(TRY004)",
  # reraise-no-cause (TRY200)
  "(TRY200)",
  # verbose-raise (TRY201)
  "(TRY201)",
  # useless-try-except (TRY203)
  "(TRY203)",
  # try-consider-else (TRY300)
  "(TRY300)",
  # raise-within-try (TRY301)
  "(TRY301)",
  # error-instead-of-exception (TRY400)
  "(TRY400)",
  # verbose-log-message (TRY401)
  "(TRY401)",
